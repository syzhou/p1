#include "Ordered_container.h"

#include <stdio.h>
#include <stdlib.h>

#define PRINT(i) printf("%d\n", i)
struct Ordered_container* numbers;
int compare(int *a, int* b);
int find(int a);
int findArg(int a);
void addOneAll(int* a);
void addSomeAll(int* a, int* b);
void printAll(int* a);
int stopAt5(int* a);
int stopAtSome(int* a, int* b);

int compare(int *a, int* b) {
	return (*a - *b);
}
int find(int a) {
	void* itemPtr = OC_find_item(numbers, &a);
	if (itemPtr) {
		return *((int*)(OC_get_data_ptr(itemPtr)));
	} else {
		return 0;
	}
}
int findArg(int a) {
	void* itemPtr = OC_find_item_arg(numbers, &a, (OC_find_item_arg_fp_t)compare);
	if (itemPtr) {
		return *((int*)(OC_get_data_ptr(itemPtr)));
	} else {
		return 0;
	}
}
void addOneAll(int* a) {
	*a = *a + 1;
}
void addSomeAll(int* a, int* b) {
	*a = *a + *b;
}
void printAll(int* a) {
	printf("printing ALL  ");
	PRINT(*a);
}
int stopAt5(int* a) {
	if (*a == 5) {
		printf("find 5");
		PRINT(5);
		return 5;
	}
	return 0;
}
int stopAtSome(int* a, int* b) {
	if (*a == *b) {
		printf("find %d", *b);
		return *b;
	}
	return 0;
}

int main() {
	numbers = OC_create_container((OC_comp_fp_t)compare);
	int minus1  = -1;
	int a1= 1;
	int a2 = 2;
	int a3 = 3;
	int a4 = 4;
	int a5 = 5;
	int a6 = 6;
	int a7 = 7;
	int a8 = 8;
	OC_clear(numbers);
	PRINT(OC_get_size(numbers));
	PRINT(OC_empty(numbers));
	PRINT(find(1));
	OC_apply(numbers, (OC_apply_fp_t)addOneAll);
	OC_apply_arg(numbers, (OC_apply_arg_fp_t)addSomeAll, &minus1);
	OC_apply(numbers, (OC_apply_fp_t)printAll);
	PRINT(OC_apply_if(numbers, (OC_apply_if_fp_t)stopAt5));
	PRINT(OC_apply_if_arg(numbers, (OC_apply_if_arg_fp_t)stopAtSome, &a5));
	OC_apply(numbers, (OC_apply_fp_t)printAll);

	printf("insert one\n");

	OC_insert(numbers, &a1);
	PRINT(OC_get_size(numbers));
		PRINT(OC_empty(numbers));
		PRINT(find(1));
		OC_apply(numbers, (OC_apply_fp_t)addOneAll);
		OC_apply_arg(numbers, (OC_apply_arg_fp_t)addSomeAll, &minus1);
		OC_apply(numbers, (OC_apply_fp_t)printAll);
		PRINT(OC_apply_if(numbers, (OC_apply_if_fp_t)stopAt5));
		PRINT(OC_apply_if_arg(numbers, (OC_apply_if_arg_fp_t)stopAtSome, &a5));
		OC_apply(numbers, (OC_apply_fp_t)printAll);





	return 0;


}
