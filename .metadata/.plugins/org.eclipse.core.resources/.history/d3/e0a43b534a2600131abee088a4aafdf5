#include "Ordered_container.h"
#include "Person.h"
#include "Meeting.h"
#include "Room.h"
#include "Utility.h"

#include <stdlib.h>
#include <stdio.h>

int compareRooms(struct Room* rm1, struct Room* rm2);
void printIndividual(struct Ordered_container* people);
void printRoom(struct Ordered_container* rooms);
void printErrUnrecCmd();
void addIndividual(struct Ordered_container* people);
void deleteIndividual(struct Ordered_container* people);

int main() {
	struct Ordered_container* people;
	struct Ordered_container* rooms;
	people = OC_create_container((OC_comp_fp_t)comparePeople);
	while (1) {
		char cmd1;
		char cmd2;
		printf("\nEnter command: ");
		scanf(" %c", &cmd1);
		scanf("%c", &cmd2);
		switch (cmd1) {
		case 'p':
			switch (cmd2) {
			case 'i':
				printIndividual(people);
				break;
			case 'r':

			default:
				printErrUnrecCmd();
				break;
			}
			break;
		case 'a':
			switch (cmd2) {
			case 'i':
				addIndividual(people);
				break;
			default:
				printErrUnrecCmd();
				break;
			}
			break;
		case 'r':
			break;
		case 'd':
			switch (cmd2) {
			case 'i':
			{
			}
				break;
			default:
				printErrUnrecCmd();
				break;
			}
			break;
		case 's':
			break;
		case 'l':
			break;
		case 'q':
			switch (cmd2) {
			case 'q' :
				return 0;
				break;
			default:
				printErrUnrecCmd();
				break;
			}
			break;
		default:
			printErrUnrecCmd();
			break;
		}
	}
	return 0;
}

/* Compare two rooms and returns negative, 0 or positive if the
 * first room compares lesser, equal or larger than the second one.
 */
int compareRooms(struct Room* rm1, struct Room* rm2) {
	return (get_Room_number(rm1) - get_Room_number(rm2));
}

/*Read a lastname from stdin and print out the person's information.
 * Print an error message if that person desn't exist.
 */
void printIndividual(struct Ordered_container* people) {
	char lastnameBuffer[MAX_STRING_LENGTH];
	struct Person* person;
	SAFEFSCANF(stdin, lastnameBuffer);
	if ((person = findPersonByLastname(people, lastnameBuffer))) {
		print_Person(person);
	} else {
		printf("No person with that name!\n");
	}


}

/*Print out error when command is not recognized.
 *
 */
void printErrUnrecCmd() {
	printf("Unrecognized command!\n");
}

/*Read firstname, lastname and phone number from stdin
 * and add the person to the people list.
 * Print an error message if that person already exist.
 */
void addIndividual(struct Ordered_container* people) {
	struct Person* newPerson = load_Person(stdin);
	if (newPerson && (addPersonIfNotExist(newPerson, people))) {
			printf("There is already a person with this last name!\n");
	}
}
void deleteIndividual(struct Ordered_container* people) {

}
